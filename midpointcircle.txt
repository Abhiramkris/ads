import matplotlib.pyplot as plt

def mid(xc, yc, r):
    x = 0
    y = r
    p = 5/4 - r
    points = []
    while x <= y:
        points.append((x + xc, y + yc))
        points.append((-x + xc, y + yc))
        points.append((x + xc, -y + yc))
        points.append((-x + xc, -y + yc))
        points.append((y + xc, x + yc))
        points.append((-y + xc, x + yc))
        points.append((y + xc, -x + yc))
        points.append((-y + xc, -x + yc))
        
        if p <= 0:
            p = p + 2 * x + 3
        else:
            p = p + 2 * x - 2 * y + 5
            y -= 1
        x += 1
    return points

# Get user input
xc = int(input("Enter the x-coordinate of the center: "))
yc = int(input("Enter the y-coordinate of the center: "))
r = int(input("Enter the radius: "))

# Generate points and plot
points = mid(xc, yc, r)
plt.scatter([x for x, y in points], [y for x, y in points])
plt.xlabel("X-axis")
plt.ylabel("Y-axis")
plt.title("Circle using Midpoint Circle Algorithm")
plt.gca().set_aspect("equal", adjustable="box")
plt.show()
