import matplotlib.pyplot as plt

def dda(x1, y1, x2, y2):
    x, y = x1, y1
    dx = x2 - x1
    dy = y2 - y1
    steps = max(abs(dx), abs(dy))
    Xinc = dx / steps
    Yinc = dy / steps
    
    points = []
    for _ in range(int(steps) + 1):
        points.append((round(x), round(y)))
        x += Xinc
        y += Yinc
    return points

def draw_ladder(x1, y1, x2, y2, num_rungs):
    # Draw the two sides of the ladder
    left_side = dda(x1, y1, x1, y2)
    right_side = dda(x2, y1, x2, y2)
    
    plt.plot(*zip(*left_side), color="black")
    plt.plot(*zip(*right_side), color="black")
    
    # Calculate and draw each rung of the ladder
    y_diff = (y2 - y1) / (num_rungs + 1)
    for i in range(1, num_rungs + 1):
        rung_y = y1 + i * y_diff
        rung = dda(x1, rung_y, x2, rung_y)
        plt.plot(*zip(*rung), color="black")

# Parameters for the ladder
x1, y1 = 1, 1  # left side start
x2, y2 = 5, 10 # right side end
num_rungs = 5  # number of rungs

plt.figure(figsize=(5, 10))
draw_ladder(x1, y1, x2, y2, num_rungs)
plt.gca().set_aspect('equal', adjustable='box')
plt.show()
